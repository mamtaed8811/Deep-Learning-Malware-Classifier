import numpy as np 
from keras.preprocessing.image import ImageDataGenerator
from keras.models import Sequential
from keras.layers import Conv2D, MaxPooling2D
from keras.layers import Activation, Dropout, Flatten, Dense
from keras import applications
from keras.utils import np_utils

from keras.models import load_model
from keras.preprocessing.image import img_to_array, load_img
import tensorflow as tf

from keras import backend as K
K.set_image_dim_ordering('th')

import os
os.environ['TF_CPP_MIN_LOG_LEVEL']='2'
import tensorflow as tf 

# dimensions of our images.
img_width, img_height = 150, 150

#prediction for a single image
test_model = load_model('D:/Mamta/Project/Data/models/model3_mod/model3.h5')
img = load_img('D:/Mamta/Project/Data/pred/c.jpg',False,target_size=(img_width,img_height))
x = img_to_array(img)
x = np.expand_dims(x, axis=0)
# preds = test_model.predict_classes(x)
# prob = test_model.predict_proba(x)
preds = test_model.predict(x)

print(preds)


#print(prob)





